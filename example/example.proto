edition = "2023";

package example;

option go_package = "github.com/terwey/protoc-gen-go-options/example;example";

import "identifier.proto";
import "google/protobuf/timestamp.proto";

// Example message with basic field types
message BasicMessage {
  string name = 1;
  int32 age = 2;
  bool is_active = 3;
}

// Message showcasing repeated fields
message RepeatedFieldsMessage {
  repeated string tags = 1;
  repeated int32 values = 2;
}

// Message with nested fields
message NestedMessage {
  BasicMessage basic = 1;
  string description = 2;
}

// Message with oneof to showcase options for mutually exclusive fields
message OneofMessage {
  oneof choice {
    string text = 1;
    int32 number = 2;
  }
}

// Message demonstrating deeply nested messages
message ComplexMessage {
  NestedMessage nested = 1;
  repeated NestedMessage nested_list = 2;
  map<string, int32> metadata = 3;
}

// Larger protobuf projects will have messages with duplicate field names
// This would cause a function name collision
// The generator handles this by then generating WithIdForFoo and WithIdForBar
message Foo {
  identifier.Identifier id = 1;
}

message Bar {
  identifier.Identifier id = 1;
}

// Message with Identifier
message SomeMessage {
  identifier.Identifier identifier = 1;
  // this caused some weird issues with the generator
  repeated identifier.Identifier include = 2;
}

// If you don't want to generate a New function for a message,
// you can add the GO_OPTIONS_SKIP_INIT option as somewhere
// in the leading comments of the message.
// This is useful if you already have an existing New function
// but still want to generate the functions that call to it.
// GO_OPTIONS_SKIP_INIT
message NoInit {

  string noInitName = 1;
}

// Message that is empty will generate no options
message EmptyMessage {}

message FooBarWithEnum {
  enum Status {
    UNKNOWN = 0;
    ACTIVE = 1;
    INACTIVE = 2;
  }
  Status status = 1;
}

message JsonExample {
  // In case the message should be JSON-marshalable for persistence
  // you can add the GO_OPTIONS_JSON_PERSISTENT option in the
  // leading comment of the field.
  // This will generate a GetFieldnameAsJSON and SetFieldnameFromJSON 
  // function on the message.
  // GO_OPTIONS_JSON_PERSISTENT
  BasicMessage basic = 1;
}

message Primitives {
  int64 integer64 = 1;
}

message WellKnown {
  google.protobuf.Timestamp created_at = 1;
}